name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: ecommerce_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal
        env:
          ConnectionStrings__DefaultConnection: Host=localhost;Database=ecommerce_test;Username=postgres;Password=postgres

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push WebAPI image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/Presentation/ECommerce.WebAPI/Dockerfile
          push: true
          tags: ghcr.io/ecommerce/webapi:${{ github.sha_short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push AuthServer image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/Infrastructure/ECommerce.AuthServer/Dockerfile
          push: true
          tags: ghcr.io/ecommerce/authserver:${{ github.sha_short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
